generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserType {
  ANONYMOUS
  STAFF
  HOD
  MASTER
  ADMIN
}

enum DesignationType {
  NONE
  ASSOCIATE_PROFESSOR
  ASSISTANT_PROFESSOR
  PROFESSOR
}

enum FormStatusType {
  PENDING
  APPROVED
  REJECTED
}


enum StatusType {
  ACTIVE
  INACTIVE
  BANNED
}

enum HrEvaluation {
  NOTSUBMITTED
  PENDING
  APPROVED
  REJECTED
}

enum GenderType {
  MALE
  FEMALE
  OTHER
}

enum PublicationIndexingSource {
  NONE
  SCI 
  SCOPUS 
  WOS
}


enum DepartmentType {
  NONE
  CSE
  ECE
  EEE
  MECH
  IT
  AIDS
  AIML
  CCE
  CSBS
}

enum SemesterType {
  ODD 
  EVEN
  NONE
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  username String? @default("")
  email String @unique
  password String
  role UserType? @default(ANONYMOUS)
  designation DesignationType? @default(NONE)
  department DepartmentType? @default(NONE)
  phonenumber String? @default("000-000-0000")
  gender GenderType? @default(OTHER)
  formstatus FormStatusType? @default(PENDING)
  status StatusType?  @default(INACTIVE)
  isfirst Boolean? @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlackListToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  token String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Form {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdBy String 
  form_title String
  start_year DateTime @default(now())
  end_year DateTime @default(now())
  current_position DesignationType
  expecting_appraisal String @default("0")
  appraisal_form Json 
  createdAt DateTime @default(now())
  updatedBy DateTime @updatedAt 
}   


model AssociateProfessor{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String
  academics Academics? 
  research Research?
  service Service?
  grantTotal1 Int
  grantTotal2 Int
  continuousImprovement String
}


//---------academics form object-----------------
model Academics{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  associate_academics AssociateProfessor @relation(fields: [formId], references: [id])
  formId String @unique @db.ObjectId
  teachingAssignment TeachingAssigment? // teachingassignment of academics object 1
  passPercentage PassPercentage?// passpercentage of academics object 2
  studentFeedbackAverage StudentFeedbackAverage? // studentfeedbackaverage of academics
  teachingResourceCreation TeacherResourceCreation? // student feedback teaching resource creation of academics
  organizingGuestLectures OrganizingGuestLectures? // student feedback organizing guest lectures of academics and visiting faculty for respective subjects
  subjectProjectsGuided StudentProjectGuided? // student feedback subject projects guided of academics
  facultyDevelopmentProgramme FacultyDevelopmentProgramme? // it can be either programme / workshop / confreence organized by the staff
  involvementInHighLevelCompetition InvolvementInHighLevelCompetition? // involvement in high level competition and innovative projects
  fdpOnlineCourseCompleted FdpOnlineCourseCompleted?
  mouSignedAndActivity MouSignedAndActivity? // mou signed and activity conducted with industries 
  tutorWardMeet TutorWardMeet? // tutor ward meeting conducted by the staff
  responsibilitiesHeld ResponsibilitiesHeld?
}

model TeachingAssigment{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academics_teachass Academics @relation(fields: [AcademicsId], references: [id])
  AcademicsId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  average Float
  teachingassignment_table TeachingAssigment_Table[]
}

model TeachingAssigment_Table{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  teachass_table TeachingAssigment @relation(fields: [teachingAssignmentId], references: [id])
  teachingAssignmentId String @unique @db.ObjectId
  semester String
  branch String
  section String
  coursetitle String
  numberofcredit Int
  points Int
  studentfeedback Float
}

model PassPercentage{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academics_passpercentage Academics @relation(fields: [passPercentageId], references: [id])
  passPercentageId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  average Float
  passpercentage_table PassPercentage_Table[]
}

model PassPercentage_Table{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  passpercentage_table PassPercentage @relation(fields: [passPercentageId], references: [id])
  passPercentageId String @unique @db.ObjectId
  academicYear String
  semester SemesterType @default(NONE)
  subjectName String
  passPercent Float
}


model StudentFeedbackAverage {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academics_studentfeedbackaverage Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
}

model TeacherResourceCreation {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academics_teacherresourcecreation Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
}

model OrganizingGuestLectures {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academics_organizingguestlectures Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String

}

model StudentProjectGuided {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academics_studentprojectguided Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  projectDetailsTable ProjectDetails_Table[]
  publicationDetailsTable PublicationDetails_Table[]
}

model ProjectDetails_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  projectDetailsTable StudentProjectGuided @relation(fields: [studentProjectGuidedId], references: [id])
  studentProjectGuidedId String @unique @db.ObjectId
  nameOfProgramme String
  yearOfStudy DateTime
  dateOfCompletion DateTime
  points Int

}

model PublicationDetails_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  publicationDetailsTable StudentProjectGuided @relation(fields: [studentProjectGuidedId], references: [id])
  studentProjectGuidedId String @unique @db.ObjectId
  paperTitle String
  journalName String
  publicationIndexingSource PublicationIndexingSource @default(NONE)
  monthYearOfPublication DateTime
}

model FacultyDevelopmentProgramme {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academics_facultydevelopmentprogramme Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  facultyDevelopmentProgrammeTable FacultyDevelopmentProgramme_Table[]
}

model FacultyDevelopmentProgramme_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  facultyDevelopmentProgrammeTable FacultyDevelopmentProgramme @relation(fields: [facultyDevelopmentProgrammeId], references: [id])
  facultyDevelopmentProgrammeId String @unique @db.ObjectId 
  categoryOfEvent String
  titleOfTheEvent String
  dateOfSanction DateTime
  fundReceivedFromAgency Int
  grantSanctioned String
}

model InvolvementInHighLevelCompetition {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academics_involvementinhighlevelcompetition Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  involvementInHighLevelCompetitionTable InvolvementInHighLevelCompetition_Table[]
}

model InvolvementInHighLevelCompetition_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  involvementInHighLevelCompetitionTable InvolvementInHighLevelCompetition @relation(fields: [involvementInHighLevelCompetitionId], references: [id])
  involvementInHighLevelCompetitionId String @unique @db.ObjectId
  competitionOnName String
  nameOfTheProjectMentored String
  dateOfParticipationOn String
  prizeWon String
  cashAward String?
}

model FdpOnlineCourseCompleted {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academic_fdponlinecoursecompleted Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  fdpOnlineCourseCompletedTable FdpOnlineCourseCompleted_Table[]
}

model FdpOnlineCourseCompleted_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  fdpOnlineCourseCompletedTable FdpOnlineCourseCompleted @relation(fields: [fdpOnlineCourseCompletedId], references: [id])
  fdpOnlineCourseCompletedId String @unique @db.ObjectId
  courseName String
  dateOfStarting String
  dateOfCompletion DateTime
  courseProvider String
  score Float
}

model MouSignedAndActivity {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academic_mousignedandactivity Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  mouSignedAndActivityTable MouSignedAndActivity_Table[]
}

model MouSignedAndActivity_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  mouSignedAndActivityTable MouSignedAndActivity @relation(fields: [mouSignedAndActivityId], references: [id])
  mouSignedAndActivityId String @unique @db.ObjectId
  mouSigned String
  nameOfCompany String
  date DateTime
}
model TutorWardMeet {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academic_tutorwardmeet Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  tutorWardMeetTable TutorWardMeet_Table[]
}

model TutorWardMeet_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  tutorWardMeetTable TutorWardMeet @relation(fields: [tutorWardMeetId], references: [id])
  tutorWardMeetId String @unique @db.ObjectId
  dateOfStart DateTime
  dateOfEnd DateTime
  valueAdditionStudent String
}

model ResponsibilitiesHeld {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academic_responsibilitiesheld Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  responsibilitiesHeldTable ResponsibilitiesHeld_Table[]
}

model ResponsibilitiesHeld_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  responsibilitiesHeldTable ResponsibilitiesHeld @relation(fields: [responsibilitiesHeldId], references: [id])
  responsibilitiesHeldId String @unique @db.ObjectId
  nameOfResponsibilityHeld String
  points Int
}


//-------- research object --------

model Research{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  associate_research AssociateProfessor @relation(fields: [formId], references: [id])
  formId String @unique @db.ObjectId
  paperPublishedInSCI PaperPublishedInSCI? // paper published in SCI
  paperPublishedInSCOPUS PaperPublishedInSCOPUS? // paper published in SCOPUS
  bookPublication BookPublication? // book publication
  publicationOfBookChapters PublicationOfBookChapters? // publication of book chapters
  patentsFiled PatentsFiled? // patents filed
  increaseInHIndex IncreaseInHIndex? // increase in h-index
  increaseInITenIndex IncreaseInITenIndex? // increase in i-10 index
  increaseInCitations IncreaseInCitations? // increase in citations
  fundedResearchProjects FundedResearchProjects? // funded research projects
  consultancyWork ConsultancyWork? // consultancy projects
  researchScholarsGuiding ResearchScholarsGuiding? // number of research scholars guiding / completed
  collaborationForeginUniversities CollaborationForeginUniversities? // collaboration with foreign universities
  establishmentOfALaboratory EstablishmentOfALaboratory? // establishment of a laboratory
}

model PaperPublishedInSCI {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_paperpublishedinsci Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  paperPulishedInSCI_Table PaperPulishedInSCI_Table[]
}

model PaperPulishedInSCI_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    paperpublishedinsci_table PaperPublishedInSCI @relation(fields: [paperPublishedInSciId], references: [id])
    paperPublishedInSciId String @unique @db.ObjectId
    journalName String 
    titleOfthePaper String
    authorPosition String
    monthYearPublication DateTime
    points Int
}

model PaperPublishedInSCOPUS {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_paperpublishedinSCOPUS Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  PaperPublishedInSCOPUS_Table PaperPublishedInSCOPUS_Table[]
}

model PaperPublishedInSCOPUS_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    paperPublishedInSCOPUS_table PaperPublishedInSCOPUS @relation(fields: [paperPublishedInSCOPUSId], references: [id])
    paperPublishedInSCOPUSId String @unique @db.ObjectId
    journalName String 
    titleOfthePaper String
    authorPosition String
    monthYearPublication DateTime
    points Int
}

model BookPublication {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_bookpublication Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  bookPublication_Table BookPublication_Table[]
}

model BookPublication_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    bookPublication_table BookPublication @relation(fields: [bookPublicationId], references: [id])
    bookPublicationId String @unique @db.ObjectId
    journalName String 
    titleOfthePaper String
    publisherName String
    IsbnNo String
    monthYearPublication DateTime
}

model PublicationOfBookChapters {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_publicationofbookchapters Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  publicationOfBookChapters_Table PublicationOfBookChapters_Table[]
}

model PublicationOfBookChapters_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    publicationOfBookChapters_table PublicationOfBookChapters @relation(fields: [publicationOfBookChaptersId], references: [id])
    publicationOfBookChaptersId String @unique @db.ObjectId
    titleOfBookChapter String 
    scopusJournalName String
    monthYearPublication DateTime
}

model PatentsFiled {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_patentsfiled Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  patentsFiled_Table PatentsFiled_Table[]
}

model PatentsFiled_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    patentsFiled_table PatentsFiled @relation(fields: [patentsFiledId], references: [id])
    patentsFiledId String @unique @db.ObjectId
    titleOfBookPatent String 
    published String  // filed / published / granted
    monthYearPublication DateTime
    points Int
}

model IncreaseInHIndex {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_increaseinhindex Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  hIndex Int
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
}

model IncreaseInITenIndex {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_increaseinitenindex Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  iTenIndex Int
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
}

model IncreaseInCitations {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_increaseincitations Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  citationsCount Int
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
}

model FundedResearchProjects {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_fundedresearchprojects Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  fundedResearchProjects_Table FundedResearchProjects_Table[]
}

model FundedResearchProjects_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    fundedResearchProjects_table FundedResearchProjects @relation(fields: [fundedResearchProjectsId], references: [id])
    fundedResearchProjectsId String @unique @db.ObjectId
    titleOfResearchProject String 
    fundingAgency String  // filed / published / granted
    monthYearPublication DateTime
    grantSantioned Int
}

model ConsultancyWork {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_consultancywork Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  consultancyWork_Table ConsultancyWork_Table[]
}

model ConsultancyWork_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    consultancyWork_table ConsultancyWork @relation(fields: [consultancyWorkId], references: [id])
    consultancyWorkId String @unique @db.ObjectId
    titleOfConsultancyWork String 
    industryName String  // filed / published / granted
    dateOfCompletion DateTime
    fundGenerated Int
}


model ResearchScholarsGuiding {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_researchscholarsguiding Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  researchScholarsGuiding_Table ResearchScholarsGuiding_Table[]

}
model ResearchScholarsGuiding_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    researchScholarsGuiding_table ResearchScholarsGuiding @relation(fields: [researchScholarsGuidingId], references: [id])
    researchScholarsGuidingId String @unique @db.ObjectId
    researchScholarName String 
    registrationNo Int  // filed / published / granted
    dateOfRegistration DateTime
    dateOfCompletion DateTime
    points Int
}


model CollaborationForeginUniversities {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_collaborationFuniversities Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  collaborationForeginUniversities_Table CollaborationForeginUniversities_Table[]
}

model CollaborationForeginUniversities_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    collaborationForeginUniversities_table CollaborationForeginUniversities @relation(fields: [collaborationForeginUniversitiesId], references: [id])
    collaborationForeginUniversitiesId String @unique @db.ObjectId
    jointProjectPublication String 
    professorName String  // filed / published / granted
    foreignUniversity String
    dateOfPublication DateTime
}


model EstablishmentOfALaboratory {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_establishmentOfLaboratory Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  establishmentOfALaboratory_Table EstablishmentOfALaboratory_Table[]

}

model EstablishmentOfALaboratory_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    establishmentOfALaboratory_table EstablishmentOfALaboratory @relation(fields: [establishmentOfALaboratoryId], references: [id])
    establishmentOfALaboratoryId String @unique @db.ObjectId
    NameOfTheLabEstablished String 
    FundingAgency String  // filed / published / granted
    dateOfSanction String
    amountSanctioned DateTime
    points Int
}

// ----------- services object ----------------

model Service {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  associate_service AssociateProfessor @relation(fields: [formId], references: [id])
  formId String @unique @db.ObjectId
  inchargesForAccreditationActivities InchargesForAccreditationActivities?
  brandingOfInstitution BrandingOfInstitution?
  membershipInProfessionalBodies MembershipInProfessionalBodies?
  cocurricularOutreachProgramme CocurricularOutreachProgramme?
  assistanceInGeneralAdministration AssistanceInGeneralAdministration?
  organizingHandlingTrainingProgramme OrganizingHandlingTrainingProgramme?
}   

model InchargesForAccreditationActivities {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_inchargesforaccreditationactivities Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  inchargesForAccreditationActivities_Table InchargesForAccreditationActivities_Table[]
}

model InchargesForAccreditationActivities_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  inchargesForAccreditationActivities_table InchargesForAccreditationActivities @relation(fields: [inchargesForAccreditationActivitiesId], references: [id])
  inchargesForAccreditationActivitiesId String @unique @db.ObjectId
  inchargeOfTheActivity String
  points Int
}

model BrandingOfInstitution {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_brandingofinstitution Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  brandingOfInstitution_Table BrandingOfInstitution_Table[]
}

model  BrandingOfInstitution_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  brandingOfInstitution_table BrandingOfInstitution @relation(fields: [brandingOfInstitutionId], references: [id])
  brandingOfInstitutionId String @unique @db.ObjectId
  nameOftheActivity String
  maxMarks Int
  points String
}

model MembershipInProfessionalBodies {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_membershipinprofessionalbodies Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  membershipInProfessionalBodies_Table MembershipInProfessionalBodies_Table[]
}

model  MembershipInProfessionalBodies_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  membershipInProfessionalBodies_table MembershipInProfessionalBodies @relation(fields: [membershipInProfessionalBodiesid], references: [id])
  membershipInProfessionalBodiesid String @unique @db.ObjectId
  nameOfProfessionalBody String
  validityStatus String
  points Int
  total Int
}


model CocurricularOutreachProgramme {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_cocurricularoutreachprogramme Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  cocurricularOutreachProgramme_Table CocurricularOutreachProgramme_Table[]
}


model  CocurricularOutreachProgramme_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  membershipInProfessionalBodies_table CocurricularOutreachProgramme @relation(fields: [cocurricularOutreachProgrammeid], references: [id])
  cocurricularOutreachProgrammeid String @unique @db.ObjectId
  date DateTime
  nameOfTheProgram String
  organizedby String
  actedAsResourcePerson String
}

model AssistanceInGeneralAdministration {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_assistanceingeneraladministration Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  assistanceInGeneralAdministration_Table AssistanceInGeneralAdministration_Table[]

}

model AssistanceInGeneralAdministration_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  assistanceInGeneralAdministration_table AssistanceInGeneralAdministration @relation(fields: [assistanceInGeneralAdministrationId], references: [id])
  assistanceInGeneralAdministrationId String @unique @db.ObjectId
  nameOfTask String
}

model OrganizingHandlingTrainingProgramme {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_organizinghandlingtrainingprogramme Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
}

