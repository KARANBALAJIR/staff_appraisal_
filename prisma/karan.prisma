generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserType {
  ANONYMOUS
  STAFF
  HOD
  MASTER
  ADMIN
}

enum DesignationType {
  NONE
  ASSOCIATE_PROFESSOR
  ASSISTANT_PROFESSOR
  PROFESSOR
}

enum FormStatusType {
  PENDING
  APPROVED
  REJECTED
}


enum StatusType {
  ACTIVE
  INACTIVE
  BANNED
}

enum HrEvaluation {
  NOTSUBMITTED
  PENDING
  APPROVED
  REJECTED
}

enum GenderType {
  MALE
  FEMALE
  OTHER
}

enum PublicationIndexingSource {
  NONE
  SCI 
  SCOPUS 
  WOS
}


enum DepartmentType {
  NONE
  CSE
  ECE
  EEE
  MECH
  IT
  AIDS
  AIML
  CCE
  CSBS
}

enum SemesterType {
  ODD 
  EVEN
  NONE
}


model Professor{
    id string @default(auto()) @map("_id") @db.objectId
    email String
    academics Academics?
    research Research?
    service Service?
    grantTotal1 Int
    grantTotal2 Int
    continuousImprovement String
}

//-------------------Academics form object-------------------
model Academics{
    id string @default(auto()) @map("_id") @db.objectId
    professor_academics Professor @relation(fields: [formId], references: [id])
    formId string @unique @db.objectId
    teachingAssignment TeachingAssignment? // teachingAssignment of the academics of the object 1
    passPercentage PassPercentage? // passPercentage of the academics of the object 2
    studentFeedbackAverage StudentFeedbackAverage? // studentFeedbackAverage of the academics 
    teacherResourceCreation TeacherResourceCreation? // student feedback teaching resource creation of the academics
    organizingGuestLectures OrganizingGuestLectures? // organizing guest lectures of the academics
    studentProjectGuided StudentProjectGuided? // student project guided of the academics
    facultyDevelopmentProgramme FacultyDevelopmentProgramme? // faculty development programme of the academics
    involvementInHighLevelCompetition InvolvementInHighLevelCompetition? // involvement in high level competition and innovative projects
    fdpOnlineCourseCompleted FdpOnlineCourseCompleted? // fdp online course completed of the academics
    mouSignedAndActivity MouSignedAndActivity? // mou signed and activity of the academics

}

model TeachingAssigment{
    id string @id @default(auto()) @map("_id") @db.objectId
    academics_teachass Academics @relation(fields: [academicsId], references: [id])
    AcademicsId string @unique @db.objectId
    proofrequired String
    erpproof String
    max point Int 
    selfEvaluation Int
    hrevaluation HrEvaluation? @default(NOTSUBMITTED)
    hrcomments String
    average Float
    teachingassignment_table TeachingAssignmentTable[]

}

model TeachingAssigment_Table{
    id string @id @default(auto()) @map("_id") @db.objectId
    teachass_table TeachingAssigment @relation(fields: [teachingAssignmentId], references: [id])
    teachingAssignmentId string @unique @db.objectId  
    semester String
    branch String
    section String
    coursetitle String
    numberofcredit Int
    points Int
    studentfeedback Float
}

model PassPercentage{
    id string @id @default(auto()) @map("_id") @db.objectId
    academics_passpercentage Academics @relation(fields: [passPercentageId], references: [id])
    passPercentageId string @unique @db.objectId
    proofrequired String
    erpproof String
    maxpoint Int
    selfEvaluation Int
    hrevaluation HrEvaluation? @default(NOTSUBMITTED)
    hrcomments String
    average Float
    passpercentage_table PassPercentageTable[]
}

model PassPercentage_Table{
    id string @id @default(auto()) @map("_id") @db.objectId
    passpercentage_table PassPercentage @relation(fields: [academicId], references: [id])
    passPercentageId string @unique @db.objectId
    academicYear String
    semester SemesterType @default(NONE)
    subjectName String
    passPercent Float 
}

model StudentFeedbackAverage{
    id string @id @default(auto()) @map("_id") @db.objectId
    academics_studentfeedbackaverage Academics @relation(fields: [academicId], references: [id])
    studentFeedbackAverageId string @unique @db.objectId
    proofrequired String
    erpproof String
    maxpoint Int
    selfEvaluation Int
    hrevaluation HrEvaluation? @default(NOTSUBMITTED)
    hrcomments String
}

model TeacherResourceCreation {
    id string @id @default(auto()) @map("_id") @db.objectId
    academics_teacherresourcecreation Academics @relation(fields: [academicId], references: [id])
    teacherResourceCreationId string @unique @db.objectId
    proofrequired String
    erpproof String
    maxpoint Int
    selfEvaluation Int
    hrevaluation HrEvaluation? @default(NOTSUBMITTED)
    hrcomments String
}

model OrganizingGuestLectures {
    id string @id @default(auto()) @map("_id") @db.objectId
    academics_organizingguestlectures Academics @relation(fields: [academicId], references: [id])
    organizingGuestLecturesId string @unique @db.objectId
    proofrequired String
    erpproof String
    maxpoint Int
    selfEvaluation Int
    hrevaluation HrEvaluation? @default(NOTSUBMITTED)
    hrcomments String
}

model StudentProjectGuided {
    id string @id @default(auto()) @map("_id") @db.objectId
    academics_studentprojectguided Academics @relation(fields: [academicId], references: [id])
    studentProjectGuidedId string @unique @db.objectId
    proofrequired String
    erpproof String
    maxpoint Int
    selfEvaluation Int
    hrevaluation HrEvaluation? @default(NOTSUBMITTED)
    hrcomments String
    projectDetailsTable ProjectDetails_Table[]
    publicationDetailsTable PublicationDetails_Table[]
}

model ProjectDetails_Table{
    id string @id @default(auto()) @map("_id") @db.objectId
    projectdetails_table StudentProjectGuided @relation(fields: [studentProjectGuidedId], references: [id])
    projectDetailsId string @unique @db.objectId
    nameOfProgramme String
    yearOfStudy DateTime
    points Int
}

model PublicationDetails_Table{
    id string @id @default(auto()) @map("_id") @db.objectId
    publicationdetails_table StudentProjectGuided @relation(fields: [studentProjectGuidedId], references: [id])
    studentProjectGuidedId string @unique @db.objectId
    papertitle String
    journalName String
    publicationIndexingSource PublicationIndexingSource @default(NONE)
    monthYearOfPublication DateTime
}

model FacultyDevelopmentProgramme {
  id string @id @default(auto()) @map("_id") @db.objectId
  facultydevelopmentprogramme_table Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.objectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfEvaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  facultyDevelopmentProgrammeDetailsTable FacultyDevelopmentProgrammeDetails_Table[]
}

model FacultyDevelopmentProgramme_Table{
  id string @id @default(auto()) @map("_id") @db.objectId
  facultydevelopmentprogrammedetails_table FacultyDevelopmentProgramme @relation(fields: [facultyDevelopmentProgrammeId], references: [id])
  facultyDevelopmentProgrammeId string @unique @db.objectId
  categoryOfEvent String
  titleOfEvent String
  dateOfSanction DateTime
  fundReceivedFromAgency Int
  grantSanctioned String
}

model InvolvementInHighLevelCompetition {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academics_involvementinhighlevelcompetition Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  involvementInHighLevelCompetitionTable InvolvementInHighLevelCompetition_Table[]
}

model InvolvementInHighLevelCompetition_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  involvementInHighLevelCompetitionTable InvolvementInHighLevelCompetition @relation(fields: [involvementInHighLevelCompetitionId], references: [id])
  involvementInHighLevelCompetitionId String @unique @db.ObjectId
  competitionOnName String
  nameOfTheProjectMentored String
  dateOfParticipationOn String
  prizeWon String
  cashAward String?
}

model FdpOnlineCourseCompleted {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academic_fdponlinecoursecompleted Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  fdpOnlineCourseCompletedTable FdpOnlineCourseCompleted_Table[]
}

model FdpOnlineCourseCompleted_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  fdpOnlineCourseCompletedTable FdpOnlineCourseCompleted @relation(fields: [fdpOnlineCourseCompletedId], references: [id])
  fdpOnlineCourseCompletedId String @unique @db.ObjectId
  courseName String
  dateOfStarting String
  dateOfCompletion DateTime
  courseProvider String
  score Float
}


model MouSignedAndActivity {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  academic_mousignedandactivity Academics @relation(fields: [academicId], references: [id])
  academicId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  mouSignedAndActivityTable MouSignedAndActivity_Table[]
}

model MouSignedAndActivity_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  mouSignedAndActivityTable MouSignedAndActivity @relation(fields: [mouSignedAndActivityId], references: [id])
  mouSignedAndActivityId String @unique @db.ObjectId
  mouSigned String
  nameOfCompany String
  date DateTime
}

//-------------------Research form object-------------------

model Research{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  professor_research Professor @relation(fields: [formId], references: [id])
  formId String @unique @db.ObjectId
  paperPublishedInSCI PaperPublishedInSCI? // paper published in SCI
  paperPublishedInSCOPUS PaperPublishedInSCOPUS? // paper published in SCOPUS
  bookPublication BookPublication? // book publication
  publicationOfBookChapters PublicationOfBookChapters? // publication of book chapters
  patentsFiled patentsFiled // patents filed
  increaseInHIndex IncreaseInHIndex? // increase in h-index
  increaseInITenIndex IncreaseInITenIndex? // increase in i - 10 index
  increaseInCitations IncreaseInCitations? // increase in citations
  fundedResearchProjects FundedResearchProjects? // funded research projects
  consultancyWork ConsultancyWork? // consultancy projects
  researchScholarsGuiding ResearchScholarsGuiding? // research scholars guiding
  collaborationForeginUniversities CollaborationForeginUniversities? // collaboration with foreign universities
  establishmentOfALaboratory EstablishmentOfALaboratory? // establishment of a laboratory
}



model PaperPublishedInSCI{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_paperpublishedinsci Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  paperpublishedinsci_table PaperPublishedInSCI_Table[]
  }

model PaperPublishedInSCI_Table{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  paperpublishedinsci_table PaperPublishedInSCI @relation(fields: [paperPublishedInSCIId], references: [id])
  paperPublishedInSCIId String @unique @db.ObjectId
  journalName String
  titleofthePaper String
  authorPosition String
  monthYearOfPublication DateTime
  points Int
}

model PaperPublishedInSCOPUS{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_paperpublishedinscopus Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  paperpublishedinscopus_table PaperPublishedInSCOPUS_Table[]
  }

model PaperPublishedInSCOPUS_Table{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  paperPublishedInSCOPUS_table PaperPublishedInSCOPUS @relation(fields: [paperPublishedInSCOPUSId], references: [id])
  paperPublishedInSCOPUSId String @unique @db.ObjectId
  journalName String
  titleofthePaper String
  authorPosition String
  monthYearOfPublication DateTime
  points Int
}

model BookPublication{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_bookpublication Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  bookpublication_table BookPublication_Table[]
}

model BookPublication_Table{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  bookpublication_table BookPublication @relation(fields: [bookPublicationId], references: [id])
  bookPublicationId String @unique @db.ObjectId
  journalName String
  titleofthepPaper String
  publisherName String
  IsbnNo String
  monthYearOfPublication DateTime
}

model PublicationOfBookChapters {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_publicationofbookchapters Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  publicationOfBookChapters_Table PublicationOfBookChapters_Table[]
}

model PublicationofBookChapters{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_publicationofbookchapters Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  publicationofbookchapters_Table PublicationOfBookChapters_Table[]
}

model PublicationOfBookChapters_Table{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  publicationofbookchapters_table PublicationOfBookChapters @relation(fields: [publicationOfBookChaptersId], references: [id])
  publicationOfBookChaptersId String @unique @db.ObjectId
  titleofBookChapter String
  scopusJournalName String
  monthYearOfPublication DateTime
}

model PatentsFiled {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_patentsfiled Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  patentsFiled_Table PatentsFiled_Table[]
}

model PatentsFiled_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    patentsFiled_table PatentsFiled @relation(fields: [patentsFiledId], references: [id])
    patentsFiledId String @unique @db.ObjectId
    titleOfBookPatent String 
    published String  // filed / published / granted
    monthYearPublication DateTime
    points Int
}

model IncreaseInHIndex{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_increaseinitenindex Research @relations(fields:[researchId], references: [id])
  researchId String @unique @db.ObjectId
  iTenIndex Int
  proofrequired String
  erpproof String
  maxpoint Int
  selfEvaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
}

model IncreaseInCitations{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_increaseincitations Research @relations(fields:[researchId], references: [id])
  researchId String @unique @db.ObjectId
  citationsCount Int
  proofrequired String
  erpproof String
  maxpoint Int
  selfEvaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
}

model FundedResearchProjects{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_fundedresearchprojects Research @relations(fields:[researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfEvaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  fundedResearchProjects_Table FundedResearchProjects_Table[]
}

model FundedResearchProjects_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    fundedResearchProjects_table FundedResearchProjects @relation(fields: [fundedResearchProjectsId], references: [id])
    fundedResearchProjectsId String @unique @db.ObjectId
    titleOfResearchProject String 
    fundingAgency String  // filed / published / granted
    monthYearPublication DateTime
    grantSantioned Int
}

model ConsultancyWork {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_consultancywork Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  consultancyWork_Table ConsultancyWork_Table[]
}

model ConsultancyWork_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    consultancyWork_table ConsultancyWork @relation(fields: [consultancyWorkId], references: [id])
    consultancyWorkId String @unique @db.ObjectId
    titleOfConsultancyWork String 
    industryName String  // filed / published / granted
    dateOfCompletion DateTime
    fundGenerated Int
}


model ResearchScholarsGuiding {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_researchscholarsguiding Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  researchScholarsGuiding_Table ResearchScholarsGuiding_Table[]

}
model ResearchScholarsGuiding_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    researchScholarsGuiding_table ResearchScholarsGuiding @relation(fields: [researchScholarsGuidingId], references: [id])
    researchScholarsGuidingId String @unique @db.ObjectId
    researchScholarName String 
    registrationNo Int  // filed / published / granted
    dateOfRegistration DateTime
    dateOfCompletion DateTime
    points Int
}


model CollaborationForeginUniversities {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_collaborationFuniversities Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  collaborationForeginUniversities_Table CollaborationForeginUniversities_Table[]
}

model CollaborationForeginUniversities_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    collaborationForeginUniversities_table CollaborationForeginUniversities @relation(fields: [collaborationForeginUniversitiesId], references: [id])
    collaborationForeginUniversitiesId String @unique @db.ObjectId
    jointProjectPublication String 
    professorName String  // filed / published / granted
    foreignUniversity String
    dateOfPublication DateTime
}


model EstablishmentOfALaboratory {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  research_establishmentOfLaboratory Research @relation(fields: [researchId], references: [id])
  researchId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  establishmentOfALaboratory_Table EstablishmentOfALaboratory_Table[]

}

model EstablishmentOfALaboratory_Table {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    establishmentOfALaboratory_table EstablishmentOfALaboratory @relation(fields: [establishmentOfALaboratoryId], references: [id])
    establishmentOfALaboratoryId String @unique @db.ObjectId
    NameOfTheLabEstablished String 
    FundingAgency String  // filed / published / granted
    dateOfSanction String
    amountSanctioned DateTime
    points Int
}

//-------------------Service form object------------------- 


model service{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  professor_service Professor @relation(fields: [formId], references: [id])
  formId String @unique @db.ObjectId
  inchargesForAccreditationActivities InchargesForAccreditationActivities?
  brandingOfInstitution BrandingOfInstitution?
  membershipInProfessionalBodies MembershipInProfessionalBodies?
  cocurricularOutreachProgramme CocurricularOutreachProgramme?
  assistanceInGeneralAdministration AssistanceInGeneralAdministration?
}

model InchargesForAccreditationActivities {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_inchargesforaccreditationactivities Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  inchargesForAccreditationActivities_Table InchargesForAccreditationActivities_Table[]
}

model InchargesForAccreditationActivities_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  inchargesForAccreditationActivities_table InchargesForAccreditationActivities @relation(fields: [inchargesForAccreditationActivitiesId], references: [id])
  inchargesForAccreditationActivitiesId String @unique @db.ObjectId
  inchargeOfTheActivity String
  points Int
}

model BrandingOfInstitution {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_brandingofinstitution Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  brandingOfInstitution_Table BrandingOfInstitution_Table[]
}

model  BrandingOfInstitution_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  brandingOfInstitution_table BrandingOfInstitution @relation(fields: [brandingOfInstitutionId], references: [id])
  brandingOfInstitutionId String @unique @db.ObjectId
  nameOftheActivity String
  maxMarks Int
  points String
}

model MembershipInProfessionalBodies {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_membershipinprofessionalbodies Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  membershipInProfessionalBodies_Table MembershipInProfessionalBodies_Table[]
}

model  MembershipInProfessionalBodies_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  membershipInProfessionalBodies_table MembershipInProfessionalBodies @relation(fields: [membershipInProfessionalBodiesid], references: [id])
  membershipInProfessionalBodiesid String @unique @db.ObjectId
  nameOfProfessionalBody String
  validityStatus String
  points Int
  total Int
}


model CocurricularOutreachProgramme {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_cocurricularoutreachprogramme Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  cocurricularOutreachProgramme_Table CocurricularOutreachProgramme_Table[]
}


model  CocurricularOutreachProgramme_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  membershipInProfessionalBodies_table CocurricularOutreachProgramme @relation(fields: [cocurricularOutreachProgrammeid], references: [id])
  cocurricularOutreachProgrammeid String @unique @db.ObjectId
  date DateTime
  nameOfTheProgram String
  organizedby String
  actedAsResourcePerson String
}

model AssistanceInGeneralAdministration {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service_assistanceingeneraladministration Service @relation(fields: [serviceId], references: [id])
  serviceId String @unique @db.ObjectId
  proofrequired String
  erpproof String
  maxpoint Int
  selfevaluation Int
  hrevaluation HrEvaluation? @default(NOTSUBMITTED)
  hrcomments String
  assistanceInGeneralAdministration_Table AssistanceInGeneralAdministration_Table[]

}

model AssistanceInGeneralAdministration_Table {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  assistanceInGeneralAdministration_table AssistanceInGeneralAdministration @relation(fields: [assistanceInGeneralAdministrationId], references: [id])
  assistanceInGeneralAdministrationId String @unique @db.ObjectId
  nameOfTask String
}

